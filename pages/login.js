import {
  Alert, AlertIcon, Box, Button, Flex, FormControl, Image, Input,
  InputGroup, InputLeftElement, InputRightElement, Stack
} from '@chakra-ui/react';
import axios from 'axios';
import Head from "next/head";
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import { FaUser } from "react-icons/fa";
import { RiLockPasswordFill } from "react-icons/ri";
import Colour from "../color/napalearncolor";
import url from './url';

export default function Home() {

  const router = useRouter()
  const [username, setUsername] = useState('')
  const [password, setPassword] = useState('')
  const [wrong, setWrong] = useState(false)
  const [wrongWord, setWrongWord] = useState('')

  let bgColor = {
    width: '100%',
    height: '100%',
    bgColor: Colour.Darkblue,
  }
  let boxLogin = {
    width: '100%',
  }
  let boxButton = {
    width: '100%',
    paddingTop: '36px',
    paddingBottom: '60px',
    bgColor: Colour.Fi
  }
  let container = {
    width: '500px',
    marginTop: '120px',
    padding: '12px',
  }

  const [show, setShow] = React.useState(false)
  const handleClick = () => setShow(!show)

  // fetch data check login and set sessionStorage
  const onLogin = async () => {
    {
      let result = await axios.post(`${url}/api/NapALearnUser/login`, {
        username: username,
        password: password
      })
      if (result.data.username != null) {
        sessionStorage.setItem('token', result.data.token)
        sessionStorage.setItem('userrole', result.data.roleID)
        sessionStorage.setItem('name', result.data.firstname + ' ' + result.data.lastname)
        sessionStorage.setItem('usernumberID', result.data.usernumberID)
        sessionStorage.setItem('urlimage', result.data.url)
        console.table(result.data)
        router.push(`/dashboard/${result.data.usernumberID}`)
      }
      else if (result.data.username == null) {
        setWrong(true)
        setWrongWord('Wrong username or password')
      }
    }
  }

  return (
    <div className="h-auto min-h-screen bg-header">
      <Head>
        <title>Nap A Learn Website</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pro.ico" />
      </Head>

      <Box sx={bgColor} >
        <Flex align="center" justify="center">
          <Box sx={container}>
            <FormControl>
              <Image
                src='/Iconnal.png'
                alt="Picture"
                width={500}
                height={400}
              />
              <Box sx={boxLogin} align="center" justify="center" >
                <Stack spacing={6}> {/* form input username and password */}
                  <InputGroup size='md'>
                    <InputLeftElement pointerEvents='none'>
                      <FaUser size={20} color="white" />
                    </InputLeftElement>
                    <Input placeholder='Username' _placeholder={{ opacity: 0.8, color: 'white' }}
                      focusBorderColor={Colour.FirstPink} color="white" colorScheme="white"
                      onChange={(e) => { setUsername(e.target.value); setWrong(false) }} />
                  </InputGroup>
                  <InputGroup size='md'>
                    <InputLeftElement pointerEvents='none'>
                      <RiLockPasswordFill size={20} color="white" />
                    </InputLeftElement>
                    <Input
                      pr='4.5rem'
                      type={show ? 'text' : 'password'}
                      placeholder='Password'
                      _placeholder={{ opacity: 0.8, color: 'white' }}
                      focusBorderColor={Colour.FirstPink}
                      colorScheme="white"
                      color="white"
                      onChange={(e) => { setPassword(e.target.value); setWrong(false) }}
                    />
                    <InputRightElement width='4.5rem'>
                      <Button h='1.75rem' size='sm' onClick={handleClick}>
                        {show ? 'Hide' : 'Show'}
                      </Button>
                    </InputRightElement>
                  </InputGroup>
                </Stack>
              </Box>
              <Box sx={boxButton}>
                <Button width='100%' borderRadius='md' bg={Colour.FirstPink} color='White' size='lg'
                  _hover={{ bg: 'White', border: '2px solid', color: Colour.FirstPink }}
                  type='submit'
                  onClick={() => { onLogin() }}>
                  LOGIN
                </Button> {/* show wrong word */}
                {(wrong) ?
                  <Alert status='error'
                    bg='none'
                    color='red'
                    position='absolute'
                    align='center'>
                    <AlertIcon />
                    {wrongWord}
                  </Alert>
                  : null
                }
              </Box>
            </FormControl>
          </Box>
        </Flex>
      </Box>
    </div>
  );
}