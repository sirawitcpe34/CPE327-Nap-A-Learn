import Head from "next/head";
import { Heading, Wrap, Box, Flex, Center, AspectRatio } from '@chakra-ui/react';
import Layout from "../../components/Layout";
import Colour from "../../color/napalearncolor";
import { useEffect, useState } from 'react';
import axios from 'axios';
import { FiChevronRight, FiChevronLeft, FiChevronsRight, FiChevronsLeft } from "react-icons/fi";
import { BiSearchAlt } from "react-icons/bi";
import { encode } from 'js-base64';
import { useRouter } from 'next/router';
import Pagination from '../../components/Pagination';
import Search from '../../components/Search';
import url from '../url';

export default () => {
    const router = useRouter()
    const [workshop, setworkshop] = useState([])
    const [page, setPage] = useState(1)
    const [pageAmount, setPageAmount] = useState(1)
    const [search, setSearch] = useState('')

    // fetch data materials and search
    const fetchData = async () => {
        console.log()

        let result = await axios.get(`${url}/api/ProfesstionMaterial/getProfesstionWorkshop`, {
            headers: {
                page: page,
                search: encode(search),
            }
        })
        setworkshop(result.data)
        if (result.data.length !== 0) {
            setPageAmount(result.data[0].page_amount)
        }
    }

    useEffect(() => {
        fetchData()
    }, [search, page])

    const onClickWorkshop = (id) => {
        router.push(`/professional/professionalworkshopID/${id}`)
    }

    let line = {
        bgColor: Colour.Darkblue,
        width: '100%',
        marginTop: '12px',
        height: '2px',
    }
    let boxPagination = {
        width: '100%',
        maxWidth: '1250px',
        marginTop: '25px',
    }
    let boxWorkshop = {
        bgColor: Colour.White,
        width: '275px',
        height: '300px',
        marginTop: '25px',
        boxShadow: 'lg',
        rounded: 'md',
    }
    let boxTopic = {
        width: '100%',
        height: '150px',
        p: "12px",
    }

    return (
        <div>
            <Head>
                <title>Nap A Learn Website</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/pro.ico" />
            </Head>
            <Layout>
                <div className="p-4 mt-1">
                    <Heading size='2xl' color='#3E3C6E'>Workshop</Heading>
                    <Box sx={line}></Box> {/* show Material */}
                    <Wrap align='center' justify='center' spacingX='50px' spacingY='12px'>
                        <Search icon={<BiSearchAlt />} onChange={(e) => { setSearch(e.target.value); setPage(1) }} />
                        {
                            workshop.map((item, index) => {
                                return (
                                    <Center>
                                        <Box key={index} sx={boxWorkshop} _hover={{ color: Colour.FirstPink }}
                                            onClick={() => onClickWorkshop(item.professworkshopID)}>
                                            <AspectRatio height='150px' ratio={16 / 9}>
                                                <iframe src={item.url} allowFullScreen></iframe>
                                            </AspectRatio>
                                            <Box sx={boxTopic}>
                                                <Heading noOfLines={4} size={18} fontSize='18px'> {item.topic}</Heading>
                                            </Box>
                                        </Box>
                                    </Center>
                                )
                            })
                        }
                    </Wrap> {/* show Pagination */}
                    <Flex align="center" justify="center" m={6}>
                        <Box sx={boxPagination}>
                            <Flex align="center" justify="center" gap="10">
                                <Pagination text="First Page" disabled={page === 1} icon={<FiChevronsLeft />}
                                    page={() => { setPage(1) }} />
                                <Pagination text="Prev Page" disabled={page === 1} icon={<FiChevronLeft />}
                                    page={() => { if (page > 1) setPage(page - 1) }} />
                                <center>
                                    <Heading size='md' color="#3E3C6E">Page {page} of {pageAmount}</Heading>
                                </center>
                                <Pagination text="Next Page" disabled={page === parseInt(pageAmount)} icon2={<FiChevronRight />}
                                    page={() => { if (page < pageAmount) setPage(page + 1) }} />
                                <Pagination text="Last Page" disabled={page === parseInt(pageAmount)} icon2={<FiChevronsRight />}
                                    page={() => { setPage(parseInt(pageAmount)) }} />
                            </Flex>
                        </Box>
                    </Flex>
                </div>
            </Layout>
        </div>
    )
}